// MIXINS


/// Set up color classes quickly by looping through a color Sass map.
///
/// @param $map {Map} [$colors] - The map of colors to loop through.
@mixin colors($map: $colors) {

	@each $name, $color in $map {

		.bg--#{$name} {
			background-color: $color;
		}

		.text--#{$name} {
			color: $color;
		}

		.fill--#{$name} {
			fill: $color;
		}
	}
}


/// Set up font classes quickly by looping through a font Sass map.
///
/// @param $map {Map} [$fonts] - The map of fonts to loop through.
@mixin fonts($map: $fonts) {

	@each $name, $font-stack in $map {
		.#{$name} {
			font-family: $font-stack;
		}
	}
}


/// Pass value(s) to create media queries.
///
/// @param $min {String}        - The pixel value for min-width.
/// @param $max {String} [null] - The pixel value for max-width.
@mixin media($min, $max: null) {

	// Create the media query.
	@if $min == null {
		@media only screen and (max-width: $max) {
			@content;
		}
	} @else if $max == null {
		@media only screen and (min-width: $min) {
			@content;
		}
	} @else {
		@media only screen and (min-width: $min) and (max-width: $max) {
			@content;
		}
	}
}


/// Create buttons with background, color, and border.
///
/// @param $bgColor   {Color}  - The desired background color.
/// @param $textColor {Color}  - The desired text color.
/// @param $border    {String} - The desired border.
@mixin button($bgColor, $textColor, $border) {
	background-color: $bgColor;
	border: $border;
	color: $textColor;
}


/// Create button hover, focus, and active states with background, color, and border.
///
/// @param $bgColor   {Color}  - The desired background color.
/// @param $textColor {Color}  - The desired text color.
/// @param $border    {String} - The desired border.
@mixin button-hover($bgColor, $textColor, $border) {
	&:hover,
	&:focus,
	&:active {
		background-color: $bgColor;
		border: $border;
		color: $textColor;
	}
}
